{
	"compiler": {
		"version": "0.8.11+commit.d7f03943"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_router",
						"type": "address"
					},
					{
						"internalType": "address[2]",
						"name": "path",
						"type": "address[2]"
					},
					{
						"internalType": "uint256",
						"name": "_swapTokensToLiquidityThreshold",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "pair",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "bool",
						"name": "value",
						"type": "bool"
					}
				],
				"name": "SetAutomatedMarketMakerPair",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "half",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "initialBalance",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "newRightBalance",
						"type": "uint256"
					}
				],
				"name": "SwapAndLiquify",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "oldImplementation",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newImplementation",
						"type": "address"
					}
				],
				"name": "UpdateTempleKin",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "afterTokenTransfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newImplementation",
						"type": "address"
					}
				],
				"name": "changeTempleKinImplementation",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "feeAddresses",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "feePercentages",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_feeAddresses",
						"type": "address[]"
					},
					{
						"internalType": "uint8[]",
						"name": "_feePercentages",
						"type": "uint8[]"
					}
				],
				"name": "feesForwarder",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getFeeAddresses",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getFeePercentages",
				"outputs": [
					{
						"internalType": "uint8[]",
						"name": "",
						"type": "uint8[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getLeftSide",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getPair",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getRightSide",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getRouter",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTempleKinImplementation",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_receiver",
						"type": "address"
					}
				],
				"name": "isFeeReceiver",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isLiquidityAdded",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isLiquidityRemoved",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_pair",
						"type": "address"
					}
				],
				"name": "isPair",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_router",
						"type": "address"
					}
				],
				"name": "isRouter",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pairLiquidityTotalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "recoverLostAVAX",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "recoverLostTokens",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "active",
						"type": "bool"
					}
				],
				"name": "setAllowance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_liquifyEnabled",
						"type": "bool"
					}
				],
				"name": "shouldLiquify",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "swapTokensToLiquidityThreshold",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_swapTokensToLiquidityThreshold",
						"type": "uint256"
					}
				],
				"name": "updateSwapTokensToLiquidityThreshold",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/LiquidityPoolManager.sol": "LiquidityPoolManager"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
			"license": "MIT",
			"urls": [
				"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
				"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da",
			"license": "MIT",
			"urls": [
				"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b",
				"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A"
			]
		},
		"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
			"keccak256": "0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5",
			"license": "MIT",
			"urls": [
				"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e",
				"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4",
			"license": "MIT",
			"urls": [
				"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922",
				"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"contracts/IJoeFactory.sol": {
			"keccak256": "0x18a585f71cd6be105959931a125f93eb6251edc51670c941471160eab737d593",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://8bfed4c112fdec2efee0813d9f35749b175250c60ed4752fe54357c15de5263a",
				"dweb:/ipfs/QmP5Tc5t5H52qfPx84ECDjPgXss1qNXWaVmr524z39cptd"
			]
		},
		"contracts/IJoePair.sol": {
			"keccak256": "0xe5c2a64e3204db4750ebb77073a6ee9fa769e6efb6584fbfc25aed886d0af35b",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://ab67e22a3376f05879f3f5383c0183c52c6c350b20a997a9ae66e669484ff359",
				"dweb:/ipfs/QmV7D3zS6MDHV2X2LUDiDonjDh5a2gjQGxwGRZRT9D1aED"
			]
		},
		"contracts/IJoeRouter.sol": {
			"keccak256": "0x7771daaa054b0b3dbac4cfbee5c541e6187287173127ddacefd9c7b26d4fee32",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://cb12bd40a45a45398797f9b1f820dad053df6f04a0824226cf0d381b1a3f75a1",
				"dweb:/ipfs/QmPJMkJvPU3aZKdB6Q2yu6ofeh5Cs3aD7m2tH3nypuyHCW"
			]
		},
		"contracts/ILiquidityPoolManager.sol": {
			"keccak256": "0x9011b72f0aec13418a3cfa72a889ae90ec8a222b370fa9f893d7c034f0f5b6a1",
			"license": "MIT",
			"urls": [
				"bzz-raw://51600af949f474e28933983dd850dd72cf356f1f0167b170126d261d0f2ee68d",
				"dweb:/ipfs/QmfQ24cfhTry4HTgzBnWiA5hPL7JBzKpKQz7Z2BaDu1Y8F"
			]
		},
		"contracts/ITempleKin.sol": {
			"keccak256": "0xafbc5b39a086eac02c03b51343a97cfbbbb5555d3bd7ca92b9a75ffad860a608",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://0470c2a305e6430f983fe955c71ccfa0836d93900e640223c3264b5af2014977",
				"dweb:/ipfs/QmSsNPjtuSXu4mDb5PErk1utHeN3xG1FfsN3C4rF67cobM"
			]
		},
		"contracts/LiquidityPoolManager.sol": {
			"keccak256": "0x8787f2a0cb882ee7b88177976de560677be8b12d1fe1d9f03e6e52fa55e7e293",
			"license": "MIT",
			"urls": [
				"bzz-raw://c2fff3e342b91cb7b3708a10ca7d20f61746ee882ab0ea6bec75a712ee871590",
				"dweb:/ipfs/QmYTYYS5FNzZg8DyuJAFDTQaDeQSFtfUNdZqGVUCZrzmQs"
			]
		},
		"contracts/OwnerRecovery.sol": {
			"keccak256": "0x6da519caa98f77c680e444a6c13d9e9673c9d0f29201524f3f19c6fe2a94e093",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://f3fad051bb3dfd7e56fcfbfc9f778ee67408d4cd7030af8c88f112f8eeb1733c",
				"dweb:/ipfs/QmdQUEE8LwmuMNuFpyvCyBWmbnH17dUPM78fGftzefr9Nv"
			]
		},
		"contracts/TempleKinImplementationPointer.sol": {
			"keccak256": "0xa87bc78ee4126881af15d761e910ff0acfc569b595982bc4e6a5dcc288310808",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://3708850394836f5d9ac75ef29507a06107315e5b3c21011fbd09126c1b7831bd",
				"dweb:/ipfs/QmVCoEJDx8SS1aiSiUEfqMRGXfL3WuEuKXbeBmZYPiMbTq"
			]
		}
	},
	"version": 1
}